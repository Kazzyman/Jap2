package main

var fileOfCardsOften = []charSetStruct{
	{"グ", "ぐ", "gu",
		" gu:ぐ:グ Starting with one angle, they settled for this?  Compare:  ta:da:ダ, and ke:ge:ゲ",
		" gu:ぐ:グ  Compare:  da:ダ, ge:ゲ    ダグゲ　",
		" TT: R-index to 'H' char, plus dakuten 濁点     ka,ki,ku,ke,ko-->ga,gi,gu,ge,go",
		" ぐ:グ  TT: R-index to 'H' char, plus dakuten 濁点   Compare:  da:ダ, ge:ゲ  ダグゲ  "},
	{"ニ", "に", "ni",
		" ni:に:ニ  I can see a knee-cap in the Hiragana ",
		" ni:に:ニ  ",
		" TT: right-middle< to the 'I' char ",
		" ?:に:ニ  TT: R-middle< to the 'I' char,  I can see a knee-cap in the Hiragana "},
	{"ゲ", "げ", "ge",
		" ge:げ:ゲ bits still there (as many curves though)  Compare  ku:gu:グ,  &  ta:za:ダ",
		" ge:げ Compare to ku:gu:グ, and ta:za:ダ   don't forget the dakuten 濁点",
		" TT: ':*' chars, 濁点    げ:ゲ  ダグゲ    ka,ki,ku,ke,ko-->ga,gi,gu,?,go  濁点",
		" げ:ゲ   TT: L-pinky> to ':*' chars   げ Compare to ku:gu:グ, and ta:da:ダ "},
	{"ゴ", "ご", "go",
		" go:ご:ゴ   looks like two Koy fish ko-y, and as ka-->ga, ko-->go ",
		" go:ご:ゴ    ご:ゴ makes sense, 'cause angles'",
		" TT: index <--- to the 'B' char, plus a dakuten 濁点  ご",
		" ご:ゴ  TT: index <--- to the 'B' char, plus a dakuten 濁点 ka,ki,ku,ke,ko-->ga,gi,gu,ge,?"},
	{"ソ", "そ", "so",
		" so:そ:ソ  starting with all angles -- I guess they `had to `backtrack? ",
		" so:そ:ソ ,  Compare:  n:ん:ン which lays-down more, and has a more-laid-down back-tick ",
		" TT: index<-- to the 'C' char,  so:ソ Looks like: し:シ  & no:ノ but MOSTLY like:  n:ん:ン ",
		" ?:そ:ソ  ,  Compare:  n:ん:ン     TT: L-index<-- to the 'C' char"},
	{"ソ", "そ", "so",
		" so:そ:ソ  starting with all angles -- I guess they `had to `backtrack? ",
		" so:そ:ソ ,  Compare:  n:ん:ン which lays-down more, and has a more-laid-down back-tick ",
		" TT: index<-- to the 'C' char,  so:ソ Looks like: し:シ  & no:ノ but MOSTLY like:  n:ん:ン ",
		" ?:そ:ソ  ,  Compare:  n:ん:ン     TT: L-index<-- to the 'C' char"},
	{"ゾ", "ぞ", "zo",
		" zo:ぞ:ゾ  it's soo big!   Compare: n:ん:ン which lays-down more",
		" zo:ぞ:ゾ  long hair and a big one,  Compare:  し:シ  &  no:ノ,  or  n:ん:ン ",
		" TT: left-index <-- to the C char, plus a dakuten 濁点 , a big one!",
		" ?:ぞ:ゾ  TT: left-index <-- to the C char, not no:ノ | n:ん:ン which lays-down more"},
	{"ソ", "そ", "so",
		" so:そ:ソ  starting with all angles -- I guess they `had to `backtrack? ",
		" so:そ:ソ ,  Compare:  n:ん:ン which lays-down more, and has a more-laid-down back-tick ",
		" TT: index<-- to the 'C' char,  so:ソ Looks like: し:シ  & no:ノ but MOSTLY like:  n:ん:ン ",
		" ?:そ:ソ  ,  Compare:  n:ん:ン     TT: L-index<-- to the 'C' char"},
	{"ナ", "な", "na",
		" na:な:ナ  Kata ナ is just like the left side of the Hira な -- な:ナ ",
		" na:な:ナ , Compare:  na:ナ  me:メ  nu:ヌ  ( め ぬ )",
		" TT: index< to the 'U' char,  ナ is very simple ... na-t complex at-all :: な ",
		" な:ナ  TT: index< to the 'U' char, Hiragana t-ies a knot, see the two chars thar "},
	{"フ", "ふ", "fu",
		" fu:ふ:フ  ふじ　Mount Fuji 富士山  富:Fu: wealth, abundant  士:Ji: gentleman, samurai, warrior",
		" fu: think Mt Fuji 'fu'ji,  fu or, alternatively, hu ",
		" TT: left-ring to the '2' char",
		" ふ:フ  TT: left-ring to the '2' char,  it is the big mountain in Japan "},
	{"ブ", "ぶ", "bu",
		" bu:ブ:ぶ",
		" fu-->bu , plus a dakuten 濁点",
		" TT: left-ring to the '2' char is fu-->bu",
		" ブ:ぶ   TT: left-ring to the '2' char, plus a dakuten 濁点 :: fu-->?"},
	{"ラ", "ら", "ra",
		" ra:ら:ラ    Compare:  hu:フ u:ウ  ラ:ら:ra:la",
		" ra is usually pronounced as la",
		" TT: right-ring up to the 'O' char",
		" Compare:  fu:フ, u:ウ:う,  & our:ラ:ら:?  TT: right-ring up to the 'O' char"},
	{"リ", "り", "ri",
		" ri:リ:り  actually, very very similar, actually!",
		" ri:リ:り Longer on the Right is Ri",
		" TT: left-ring-finger on it's 'L' char",
		" リ:り very similar   TT: left-ring-finger on it's 'L' char"},
	{"レ", "れ", "re",
		" re:レ:れ  laying on the little finger",
		" re:レ:れ  the れ looks like someone getting blown, laid ",
		" TT: right-pinky on it's ';' char",
		" レ:れ   TT: right-pinky on it's ';' char"},
}
